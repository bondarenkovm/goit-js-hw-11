{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAMMC,EAAgB,IAAI,E,WAAAC,SACpBC,EAAOC,SAASC,cAAc,gBAC9BC,EAAUF,SAASC,cAAc,YAEnCE,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9CC,aAAe,MACfC,aAAc,MAQVC,EAAW,IAAIC,sBA0BrB,SAAwBC,GAEtBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRhB,EACGiB,eACAC,MAAK,SAAAC,G,IAAGC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAOb,GANAC,EAAa,CAAEF,OAAMC,cAErBV,EAASY,QAAQlB,EAAQmB,kBAIrBnB,EAAQoB,SAASC,SAAWL,EAM9B,OAJAV,EAASgB,kBACT7B,EAAA8B,OAAOC,QACL,6D,IAKLC,OAAM,SAAAC,GACLpB,EAASgB,aACT7B,EAAA8B,OAAOC,QACL,6D,SAxDI,CACdG,KAAM,KACNC,WAAY,QACZC,UAAW,IA4Db,SAASZ,EAAaa,G,IAAEf,EAAFe,EAAEf,KAAMC,EAARc,EAAQd,UACA,IAAxBrB,EAAcoC,OAChBtC,EAAA8B,OAAOS,QAAQ,oBAA8BC,OAAVjB,EAAU,aAG/C,IAuCQkB,EAvCFC,EAASpB,EACZqB,KACC,SAAAtB,G,IACEuB,EAAYvB,EAAZuB,aACAC,EAAaxB,EAAbwB,cACAC,EAAIzB,EAAJyB,KACAC,EAAK1B,EAAL0B,MACAC,EAAK3B,EAAL2B,MACAC,EAAQ5B,EAAR4B,SACAC,EAAS7B,EAAT6B,UAEA,MAAO,0EAGwBV,OADtBK,EAAc,6CAC8BL,OAAtBI,EAAa,WAGPJ,OAHgBM,EAAK,+GAIrBN,OADAO,EAAM,qDAEHP,OADHQ,EAAM,wDAEFR,OADDS,EAAS,yDACET,OAAVU,EAAU,iC,IAKtDC,KAAK,IACR5C,EAAQ6C,mBAAmB,YAAaV,GAExC7B,EAASY,QAAQlB,EAAQmB,kBAEzBlB,EAAS6C,UASDZ,EACNlC,EAAQ+C,kBAAkBC,wBADpBC,OAERC,OAAOC,SAAS,CACdC,IAAkB,IAAblB,EACLmB,SAAU,U,CATd,SAASC,IACPtD,EAAQuD,UAAY,E,CAhGtB1D,EAAK2D,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEAD,EAAIE,cAAcC,SAASC,YAAYC,MAAMC,QAC/CT,IACA3D,EAAcqE,MAAQP,EAAIE,cAAcC,SAASC,YAAYC,MAAMC,OACnEpE,EAAcsE,YACdtE,EAAciB,eAAeC,MAAK,SAAAC,G,IAAGC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UACpCD,EAAKM,OAMVJ,EAAa,CAAEF,OAAMC,cALnBvB,EAAA8B,OAAOC,QACL,2E,MAON8B,IACA7D,EAAA8B,OAAOC,QAAQ,yB","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport NewApiPixabay from './fetchPixabayAPI';\n\nconst newApiPixabay = new NewApiPixabay();\nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\n\nvar lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: `alt`,\n  captionDelay: 250,\n});\n\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\nconst observer = new IntersectionObserver(onInfinityload, options);\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  if (evt.currentTarget.elements.searchQuery.value.trim()) {\n    clearGallery();\n    newApiPixabay.query = evt.currentTarget.elements.searchQuery.value.trim();\n    newApiPixabay.resetPage();\n    newApiPixabay.fetchPixabay().then(({ hits, totalHits }) => {\n      if (!hits.length) {\n        Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        return;\n      }\n      renderMarkup({ hits, totalHits });\n    });\n  } else {\n    clearGallery();\n    Notify.failure('Enter data to search!');\n  }\n}\n\nfunction onInfinityload(entries) {\n  //   console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      newApiPixabay\n        .fetchPixabay()\n        .then(({ hits, totalHits }) => {\n          renderMarkup({ hits, totalHits });\n\n          observer.observe(gallery.lastElementChild);\n          //   console.log(gallery.children.length);\n          //   console.log(totalHits);\n\n          if (gallery.children.length === totalHits) {\n            // console.log(gallery.lastElementChild);\n            observer.disconnect();\n            Notify.failure(\n              \"We're sorry, but you've reached the end of search results.\"\n            );\n            return;\n          }\n        })\n        .catch(error => {\n          observer.disconnect();\n          Notify.failure(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        });\n    }\n  });\n}\n\nfunction renderMarkup({ hits, totalHits }) {\n  if (newApiPixabay.pages === 2) {\n    Notify.success(`Hooray! We found ${totalHits} images.`);\n  }\n\n  const markup = hits\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<div class=\"photo-card\">\n        <div class=\"wraper\">\n      <a href=\"${largeImageURL}\">\n        <img class=\"card-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n      </a></div>\n      <div class=\"info\">\n        <p class=\"info-item\"><b>Likes: </b>${likes}</p>\n        <p class=\"info-item\"><b>Views: </b>${views}</p>\n        <p class=\"info-item\"><b>Comments: </b>${comments}</p>\n        <p class=\"info-item\"><b>Downloads: </b>${downloads}</p>\n      </div>\n    </div>`;\n      }\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  observer.observe(gallery.lastElementChild);\n\n  lightbox.refresh();\n  smoothScroll();\n}\n\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\n\nfunction smoothScroll() {\n  const { height: cardHeight } =\n    gallery.firstElementChild.getBoundingClientRect();\n  window.scrollBy({\n    top: cardHeight * 0.31,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$93b54f497d416715$var$newApiPixabay","default","$93b54f497d416715$var$form","document","querySelector","$93b54f497d416715$var$gallery","$93b54f497d416715$var$lightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","$93b54f497d416715$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","fetchPixabay","then","param","hits","totalHits","$93b54f497d416715$var$renderMarkup","observe","lastElementChild","children","length","disconnect","Notify","failure","catch","error","root","rootMargin","threshold","param1","pages","success","concat","cardHeight","markup","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","refresh","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$93b54f497d416715$var$clearGallery","innerHTML","addEventListener","evt","preventDefault","currentTarget","elements","searchQuery","value","trim","query","resetPage"],"version":3,"file":"infinite-scroll.37101d38.js.map"}